{"version":3,"file":"static/js/858.6ade2118.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/user.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","services/address.js","views/pages/management/address.js","views/pages/management/userManagement.js","services/master.js","views/pages/master/LabInstrument.js","services/gas.js","views/pages/master/Gases.js","services/labware.js","views/pages/master/labWare.js","services/brand.js","views/pages/master/Brand.js","services/chemicals.js","views/pages/master/Chemicals.js","services/lifescience.js","views/pages/master/LifeScience.js","services/product.js","views/pages/Product/Product.js","views/layout/route.js","views/pages/admin/Profile.js","views/pages/admin/Change-password.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\n    return (\n        <>\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\n        </>\n    );\n};\n\nexport default App;","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'application';\n\n    static detail(data) {\n        return axios.get(this.baseURL + '/details', { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","import React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\n\nexport default function TinyMce(props) {\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\n    if (!plugins) {\n        plugins = [\n            'advlist autolink lists link image charmap print preview anchor',\n            'searchreplace visualblocks code fullscreen',\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\n            'image paste table code'\n        ];\n    }\n    if (!toolbar) {\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\n    }\n    if (!content_style) {\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\n    }\n\n    const editorRef = useRef(null);\n    const editorContent = () => {\n        if (editorRef.current) {\n            onChange(editorRef.current.getContent())\n        }\n    };\n\n    return (\n        <>\n            <Editor\n                onInit={(evt, editor) => editorRef.current = editor}\n                {...{ initialValue }}\n                init={{\n                    height, menubar, plugins, toolbar, content_style,\n\n                    file_browser_callback_types: 'image',\n                    file_picker_callback: function (cb, value, meta) {\n                        const input = document.createElement(\"input\");\n                        input.setAttribute(\"type\", \"file\");\n                        input.setAttribute(\"accept\", \"image/*\");\n                        input.onchange = function () {\n                            const file = this.files[0];\n                            const reader = new FileReader();\n                            reader.readAsDataURL(file);\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\n                        };\n                        input.click();\n                    },\n                    deprecation_warnings: false\n                }}\n                onSelectionChange={editorContent}\n            />\n        </>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Tabs, Card, Select, DatePicker, Divider } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/application';\nimport { AntdMsg } from '../../utils/Antd';\nimport TinyMce from \"../../utils/TinyMce\"\n\nexport default function Application() {\n\n    // const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [currentTab, setCurrentTab] = useState(0);\n\n    const handleChange = (value, changeForm) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        try {\n            (() => {\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\n\n            })().then(res => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                setCurrentTab((currentTab + 1) % 5);\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        } catch (err) {\n            AntdMsg(err.message, 'error');\n        }\n    }\n\n    const getDetails = (type) => {\n        setAjxRequesting(true);\n        service.detail(type).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        if (currentTab === 0) {\n            getDetails({ _id: data._id, type: \"aboutus\" });\n        } else if (currentTab === 1) {\n            getDetails({ _id: data._id, type: \"termcondition\" });\n        } else if (currentTab === 2) {\n            getDetails({ _id: data._id, type: \"faq\" });\n        } else if (currentTab === 3) {\n            getDetails({ _id: data._id, type: \"contactus\" });\n        } else if (currentTab === 4) {\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\n        }\n    }, [currentTab])\n\n\n\n    return (\n        <>\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\n                    items={[\n                        {\n                            label: \"About us\",\n                            key: 0,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <Aboutus {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Terms & Condition\",\n                            key: 1,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <TandC {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"FAQ\",\n                            key: 2,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <FAQ {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Contact us\",\n                            key: 3,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <Contactus {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Privacy Policy\",\n                            key: 4,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\n                            </Card>,\n                        }\n                    ]}\n                />\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\n                </div>\n            </Spin>\n\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, data }) {\n\n    const [modelNames, setModelNames] = useState([])\n\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n\n    }\n\n\n    useEffect(() => {\n        const models = data?.map((item) => (\n            {\n                label: item.modelName,\n                value: item.modelId,\n            }\n\n        ))\n        setModelNames(models)\n\n    }, [data])\n\n\n\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                {/*<Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select value={data.fuelType} onChange={(v) => onChange(v, \"fuelType\")} placeholder=\"Select by Fuel type\" allowClear>\n                            <Select.Option value=\"Diesel\" >Diesel</Select.Option>\n                            <Select.Option value=\"Petrol\" >Petrol</Select.Option>\n                            <Select.Option value=\"Petrol + CNG\" >Petrol + CNG</Select.Option>\n                            <Select.Option value=\"Petrol + LPG\" >Petrol + LPG</Select.Option>\n                            <Select.Option value=\"Electric\" >Electric</Select.Option>\n                            <Select.Option value=\"Hybrid\" >Hybrid</Select.Option>\n                        </Select>\n\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select\n                            showSearch\n                            allowClear\n                            placeholder=\"Select by Model Name\"\n                            optionFilterProp=\"children\"\n                            onChange={(v) => onChange(v, \"modelId\")}\n                            filterOption={(input, option) =>\n                                (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={modelNames}\n                        />\n\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                        </Col>*/}\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected dealer?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [currentTab, setCurrentTab] = useState(0);\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        try {\n            (() => {\n                return currentTab === 0 ? service.save({ type: 'aboutus', data: data.data }) :\n                    currentTab === 1 ? service.save({ type: 'termcondition', data: data.data }) :\n                        currentTab === 2 ? service.save({ type: 'faq', data: data.data }) :\n                            currentTab === 3 ? service.save({ type: 'contactus', data: data.data }) :\n                                currentTab === 4 ? service.save({ type: 'privacy-policy', data: data.data }) : null\n\n            })().then(res => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                setCurrentTab((currentTab + 1) % 5);\n                list();\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        } catch (err) {\n            AntdMsg(err.message, 'error');\n        }\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [currentTab, data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setCurrentTab(0);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        console.log(data)\n        if (data.type === \"aboutus\") {\n            setCurrentTab(0)\n        } else if (data.type === \"termcondition\") {\n            setCurrentTab(1)\n        } else if (data.type === \"faq\") {\n            setCurrentTab(2)\n        } else if (currentTab === 3) {\n            data.type = \"contactus\"\n        } else if (currentTab === 4) {\n            data.type = \"privacy-policy\"\n        }\n    }, [currentTab])\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\n                        items={[\n                            {\n                                label: \"About us\",\n                                key: 0,\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <Aboutus {...{ data, handleChange, save }} />\n                                </Card>,\n                                disabled: data.type === \"aboutus\"\n                            },\n                            {\n                                label: \"Terms & Condition\",\n                                key: 1,\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <TandC {...{ data, handleChange, save }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"FAQ\",\n                                key: 2,\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <FAQ {...{ data, handleChange, save }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"Contact us\",\n                                key: 3,\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <Contactus {...{ data, handleChange, save }} />\n                                </Card>,\n                            },\n                            {\n                                label: \"Privacy Policy\",\n                                key: 4,\n                                children: <Card style={{ borderTop: 0 }}>\n                                    <PrivacyPolicy {...{ data, handleChange, save }} />\n                                </Card>,\n                            }\n                        ]}\n                    />\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst Aboutus = ({ data, handleChange }) => {\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Data\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst TandC = ({ data, handleChange }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Data\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        </>\n    );\n}\n\nconst FAQ = ({ data, handleChange }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Data\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst Contactus = ({ data, handleChange }) => {\n\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\n                    <Col span={6}>\n                        <Form.Item label=\"Email\" required>\n                            <Input type=\"email\" placeholder=\"johndoe123@gmail.com\" value={data.data?.email} onChange={e => { handleChange({ data: { ...data.data, email: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Phone Number\" required>\n                            <Input placeholder=\"995412XXX\" value={data.data?.number} onChange={e => { handleChange({ data: { ...data.data, number: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\nconst PrivacyPolicy = ({ data, handleChange }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"Data\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'user';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/list-user', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'file';\n\n    static get(url) {\n        return axios.get(\"../\"+  url);\n    }\n\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static remove(data) {\n        return axios.post(this.baseURL + \"/remove\", data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload } from \"antd\";\nimport ImgCrop from 'antd-img-crop';\nimport fileService from \"../services/file\";\nimport React from \"react\";\n\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    if (cropImage) {\n        if (typeof cropImage !== typeof {}) {\n            cropImage = {};\n        }\n        cropImage.aspect = cropImage.aspect || 1;\n        cropImage.shape = cropImage.shape || 'rect';\n        cropImage.quality = cropImage.quality || 1;\n        return (\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\n                <Upload\n                    accept=\"image/*\"\n                    customRequest={uploadImage}\n                    onChange={handleOnChange}\n                    onRemove={handleRemove}\n                    listType={listType}\n                    fileList={fileList}\n                    className=\"image-upload-grid\"\n                    disabled={disabled}\n                >\n                    {fileList?.length >= count ? null : <div>Upload</div>}\n                </Upload>\n            </ImgCrop>\n        );\n    } else {\n        return <Upload\n            accept=\"image/*\"\n            customRequest={uploadImage}\n            onChange={handleOnChange}\n            onRemove={handleRemove}\n            listType={listType}\n            fileList={fileList}\n            className=\"image-upload-grid\"\n            disabled={disabled}\n        >\n            {fileList?.length >= count ? null : <div>Upload</div>}\n        </Upload>\n    }\n\n};","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'user';\n\n    static detailJob(id, data) {\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\n    }\n    static listJob(data) {\n        return axios.get(this.baseURL + '/address/list', { params: data });\n    }\n    static saveJob(data, query) {\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\n    }\n    static deleteJob(id) {\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\n    }\n\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\n//import service from '../../../services/chemicle';\nimport util from '../../../utils/util';\nimport service from '../../../services/address';\n\n\n\n\nexport default function Address({ parentId }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addSubNewModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n\n        },\n        {\n            title: 'Lable',\n            dataIndex: 'lable',\n            width: 100,\n            render: (v, row) => {\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\n            }\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.listJob(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.deleteJob(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n\n    return (\n        <>\n            {\n                !parentId\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n\n        </>\n    );\n}\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected datas?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            console.log('dt', dt);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailsjob(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.saveJob(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\n        }\n    }, [data.name]);\n\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\n                ]}\n            >\n\n\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\n\n\n\n\n\n\n\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport UserService from '../../../services/user';\nimport UploadImage from '../../../utils/UploadImage';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport Address from './address';\nimport service from '../../../services/address';\n\n\nexport default function UserManagement() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\n    const addNewModalRef = useRef();\n    const ModelModalRef = useRef();\n    const columns = [\n        {\n            title: 'Username',\n            dataIndex: 'name',\n\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            width: 100,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            width: 200,\n        },\n        {\n            title: 'Job',\n            dataIndex: '_id',\n            width: 80,\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: status => {\n                if (status == \"blocked\") {\n                    return <Tag color='red'>Blocked</Tag>\n                } else if (status == \"active\") {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color=\"yellow\">Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this User?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        UserService.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        UserService.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <ModelModal ref={ModelModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item>\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => { setQData({...qData, status: e }) }} >\n                            <Select.Option value=\"active\">Active</Select.Option>\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        UserService.detailUser(data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        UserService.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ avatar: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={20}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Username\" required>\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n\n                                    <Col span={12}>\n                                        <Form.Item label=\"Email\" required>\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Phone\" required>\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col span={4}>\n                                <Form.Item label=\"Avatar\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={10}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value=\"active\">Active</Select.Option>\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst ModelModal = forwardRef((props, ref) => {\n\n\n\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <Address {...{ userId: data._id }} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/lab-instrument/details/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/lab-instrument/list', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/lab-instrument/save\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/lab-instrument/delete', { ids: id });\n    }\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/master';\nimport util from '../../../utils/util';\n\n\nexport default function LabInstrument({ parentId }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addNewLabelRef = useRef();\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Button',\n            dataIndex: 'button',\n            width: 100,\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\n\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n        {\n            title: 'Unique Id',\n            dataIndex: 'uniqueId',\n            width: 100,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n    function list() {\n        setLoading(true);\n        service.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    const deleteData = (id) => {\n        service.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n    return (\n        <>\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\n        </>\n    );\n};\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailUser(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    const save = () => {\n        setAjxRequesting(true);\n        service.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({slug: util.removeSpecialChars(data.name || \"\")});\n        }\n    }, [data.name]);\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            {/* <Col span={24}>\n                                <Form.Item label=\"Unique Id\" required>\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\n                                </Form.Item>\n                            </Col> */}\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst AddLabel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                // onOk={save}\n                // okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n            // footer={[\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n            // ]}\n            >\n                <LabInstrument parentId={data._id} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/gas/details/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/gas/list', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/gas/save\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/gas/delete', { ids: id });\n    }\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/gas';\nimport util from '../../../utils/util';\n\n\nexport default function Gases({ parentId }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addNewLabelRef = useRef();\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Button',\n            dataIndex: 'button',\n            width: 100,\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\n\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n        {\n            title: 'Unique Id',\n            dataIndex: 'uniqueId',\n            width: 100,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n    function list() {\n        setLoading(true);\n        service.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    const deleteData = (id) => {\n        service.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n    return (\n        <>\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\n        </>\n    );\n};\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data ?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailUser(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    const save = () => {\n        setAjxRequesting(true);\n        service.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\n        }\n    }, [data.name]);\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            {/* <Col span={24}>\n                                <Form.Item label=\"Unique Id\" required>\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\n                                </Form.Item>\n                            </Col> */}\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst AddLabel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                // onOk={save}\n                // okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n            // footer={[\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n            // ]}\n            >\n                <Gases parentId={data._id} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/labware/details/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/labware/list', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/labware/save\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/labware/delete', { ids: id });\n    }\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/labware';\nimport util from '../../../utils/util';\n\n\nexport default function LabWare({ parentId }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addNewLabelRef = useRef();\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Button',\n            dataIndex: 'button',\n            width: 100,\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\n\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n        {\n            title: 'Unique Id',\n            dataIndex: 'uniqueId',\n            width: 100,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n    function list() {\n        setLoading(true);\n        service.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    const deleteData = (id) => {\n        service.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n    return (\n        <>\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\n        </>\n    );\n};\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data ?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailUser(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    const save = () => {\n        setAjxRequesting(true);\n        service.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\n        }\n    }, [data.name]);\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            {/* <Col span={24}>\n                                <Form.Item label=\"Unique Id\" required>\n                                    <Input placeholder=\"Unique Id\" value={data.uniqueId} onChange={e => { handleChange({ uniqueId: e.target.value }) }} />\n                                </Form.Item>\n                            </Col> */}\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst AddLabel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                // onOk={save}\n                // okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n            // footer={[\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n            // ]}\n            >\n                <LabWare parentId={data._id} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master/';\n\n\n\n\n    static list(data) {\n        return axios.get(this.baseURL + \"brand/list\");\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"brand/save\", data, { params: query });\n    }\n\n    static delete(id) {\n        return axios.post(this.baseURL + 'brand/delete', { ids: id });\n    }\n\n    static details(id) {\n        return axios.get(this.baseURL + 'brand/details/' + id);\n    }\n\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../../services/brand';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\n\n\n\nexport default function Brand() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n\n        },\n\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this User?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        // service.list().then((res)=>{\n        //     console.log(res)\n        // })\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.details(data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        console.log('data', data);\n    }, [data]);\n\n\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master/';\n\n\n\n\n    static list(data) {\n        return axios.get(this.baseURL + \"chemical/list\", { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"chemical/save\", data, { params: query });\n    }\n\n    static delete(id) {\n        return axios.post(this.baseURL + 'chemical/delete', { ids: id });\n    }\n\n    static details(id) {\n        return axios.get(this.baseURL + 'chemical/details/' + id);\n    }\n\n\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/chemicals';\nimport util from '../../../utils/util';\n\n\n\nexport default function Chemicals({ parentId }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addSubNewModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n\n        },\n        {\n            title: 'Lable',\n            dataIndex: 'lable',\n            width: 100,\n            render: (v, row) => {\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\n            }\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n\n    return (\n        <>\n            {\n                !parentId\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <NewForm ref={addSubNewModalRef} ></NewForm>\n        </>\n    );\n}\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected datas?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            console.log('dt', dt);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.details(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\n        }\n    }, [data.name]);\n\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\n                ]}\n            >\n\n\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\n\nconst NewForm = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n\n\n    return (\n        <>\n\n            <Modal\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n                footer={null}\n            >\n                <Chemicals parentId={data._id}></Chemicals>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'master/';\n\n\n\n\n    static list(data) {\n        return axios.get(this.baseURL + \"life-science/list\", { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"life-science/save\", data, { params: query });\n    }\n\n    static delete(id) {\n        return axios.post(this.baseURL + 'life-science/delete', { ids: id });\n    }\n\n    static details(id) {\n        return axios.get(this.baseURL + 'life-science/details/' + id);\n    }\n\n\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/lifescience';\nimport util from '../../../utils/util';\n\n\n\nexport default function Lifescience({ parentId }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addSubNewModalRef = useRef();\n\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n\n        },\n        {\n            title: 'Lable',\n            dataIndex: 'lable',\n            width: 100,\n            render: (v, row) => {\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\n            }\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n\n    return (\n        <>\n            {\n                !parentId\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n                    : null\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <NewForm ref={addSubNewModalRef} ></NewForm>\n        </>\n    );\n}\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected datas?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            console.log('dt', dt);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.details(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\n        }\n    }, [data.name]);\n\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n\n\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\n\nconst NewForm = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n\n\n    return (\n        <>\n\n            <Modal\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n                footer={null}\n            >\n                <Lifescience parentId={data._id}></Lifescience>\n            </Modal>\n        </>\n    );\n});\n\n\n\n\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'ecomm/product/';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + 'list', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"save\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + 'delete', { ids: id });\n    }\n}","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport service from '../../../services/product';\nimport util from '../../../utils/util';\n\n\nexport default function Product({ parentId }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo', parentId });\n    const addNewModalRef = useRef();\n    const addNewLabelRef = useRef();\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Button',\n            dataIndex: 'button',\n            width: 100,\n            render: (value, row) => { return <Button onClick={() => { addNewLabelRef.current.openForm(row) }}>Active</Button> },\n\n        },\n        {\n            title: 'Slug',\n            dataIndex: 'slug',\n            width: 100,\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            width: 100,\n        },\n        {\n            title: 'Description',\n            dataIndex: 'description',\n            width: 100,\n        },\n        {\n            title: 'Meta-Title',\n            dataIndex: 'metaTitle',\n            width: 100,\n        },\n        {\n            title: 'Meta-Tag',\n            dataIndex: 'metaTag',\n            width: 100,\n        },\n        {\n            title: 'Meta-Description',\n            dataIndex: 'metaDescription',\n            width: 100,\n        },\n        {\n            title: 'Inventory',\n            dataIndex: 'inventory',\n            width: 100,\n        },\n        {\n            title: 'Actual-Price',\n            dataIndex: 'actualPrice',\n            width: 100,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this data?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n    function list() {\n        setLoading(true);\n        service.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    const deleteData = (id) => {\n        service.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n    return (\n        <>\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\n        </>\n    );\n};\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data ?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\nconst AddForm = forwardRef((props, ref) => {\n    const { list, parentId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => {\n        setData({ ...data, ...value });\n    }\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { parentId }\n            );\n        }\n    }));\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detailUser(data._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    const save = () => {\n        setAjxRequesting(true);\n        service.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n    useEffect(() => {\n        if (!data._id) {\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\n        }\n    }, [data.name]);\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Slug\" required>\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Price\" required>\n                                    <Input placeholder=\"Price\" value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Description\" required>\n                                    <Input placeholder=\"Description\" value={data.description} onChange={e => { handleChange({ description: util.removeSpecialChars(e.target.value) }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Meta-Title\" required>\n                                    <Input placeholder=\"Meta-Title\" value={data.metaTitle} onChange={e => { handleChange({ metaTitle: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Meta-Tag\" required>\n                                    <Input placeholder=\"Meta-Tag\" value={data.metaTag} onChange={e => { handleChange({ metaTag: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Meta-Description\" required>\n                                    <Input placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange({ metaDescription: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Inventory\" required>\n                                    <Input placeholder=\"Inventory\" value={data.inventory} onChange={e => { handleChange({ inventory: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Actual-Price\" required>\n                                    <Input placeholder=\"Actual-Price\" value={data.actualPrice} onChange={e => { handleChange({ actualPrice: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst AddLabel = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    // const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData({ ...dt });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                // onOk={save}\n                // okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1200}\n                className=\"app-modal-body\"\n            // footer={[\n            //     <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n            //     <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n            // ]}\n            >\n                <Product parentId={data._id} />\n            </Modal>\n        </>\n    );\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\n\nimport Dashboard from '../pages/Dashboard';\nimport Application from \"../pages/Application\"\nimport UserManagement from '../pages/management/userManagement';\nimport Profile from '../pages/admin/Profile';\nimport ChangePassword from '../pages/admin/Change-password';\nimport LabInstrument from '../pages/master/LabInstrument';\nimport Gases from '../pages/master/Gases';\nimport LabWare from '../pages/master/labWare';\nimport Brand from '../pages/master/Brand';\nimport Chemicles from '../pages/master/Chemicals';\nimport LifeScience from '../pages/master/LifeScience';\nimport Product from '../pages/Product/Product';\n\nconst routes = [\n    { title: 'Add New Product', icon: BankOutlined, url: '/product', component: Product },\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\n    {\n        title: 'Master', icon: BankOutlined, url: '/master-new', children: [\n            { title: 'Brand', icon: ApartmentOutlined, url: '/', component: Brand },\n            { title: 'Chemicals', icon: ApartmentOutlined, url: '/chemicals', component: Chemicles },\n            { title: 'Life-Science', icon: ApartmentOutlined, url: '/lifescience', component: LifeScience },\n            { title: 'Lab Instrument', icon: ApartmentOutlined, url: '/lab-instrument', component: LabInstrument },\n            { title: 'Lab Ware', icon: ApartmentOutlined, url: '/lab-ware', component: LabWare },\n            { title: 'Gases', icon: ApartmentOutlined, url: '/gases', component: Gases },\n        ]\n    },\n    {\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\n        ]\n    },\n    { title: 'Application', icon: CalendarOutlined, url: '/application', component: Application },\n    {\n        title: 'You', icon: ApartmentOutlined, url: '/profile', children: [\n            { title: 'Profile', icon: ApartmentOutlined, url: '/', component: Profile },\n            { title: 'Change Password', icon: ApartmentOutlined, url: '/change-password', component: ChangePassword },\n        ]\n    },\n].filter(v => (!v.hidden) || v.children?.length);\n\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col , Typography, Divider, Switch } from 'antd';\nimport { PageHeader } from '@ant-design/pro-layout'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\n\nimport React, { useEffect, useState } from 'react';\nimport service from '../../../services/admin';\nimport { AntdMsg } from '../../../utils/Antd';\nimport UploadImage from '../../../utils/UploadImage';\n\nexport default function Profile() {\n\n    const [data, setData] = useState({});\n    const [fileList, setFileList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [doSave, setDoSave] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function list() {\n        setLoading(true);\n        service.profile().then(res => {\n            setData(res.data.result || {});\n            if (res.data.result?.avatar) {\n                setFileList([res.data.result?.avatar]);\n            }\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    useEffect(() => {\n        list();\n    }, []);\n\n    useEffect(() => {\n        updateProfile();\n    }, [data]);\n\n    function updateProfile() {\n        if (doSave) {\n            setLoading(true);\n            service.saveProfile(data).then(res => {\n                AntdMsg(res.message);\n            }).catch(err => {\n                AntdMsg(err.message, 'error');\n            }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    useEffect(() => {\n        handleChange(fileList?.[0], 'avatar');\n    }, [fileList]);\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader \n                    title={greetingTime(new Date()) + ', ' + data?.name}\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\n                />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={16}>\n                            <Row gutter={[12, 10]}>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\n                                            {data.name}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\n                                            {data.userName}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\n                                            {data.email}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\n                                            {data.phone}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={8}>\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\n\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col, Divider, Input, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\nimport { PageHeader } from '@ant-design/pro-layout'\n\nimport React, { useState } from 'react';\nimport service from '../../../services/admin';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nexport default function ChangePassword() {\n\n    const [data, setData] = useState({name: commonObj.name});\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function save() {\n        setLoading(true);\n        service.updatePassword(data).then(res => {\n            AntdMsg(res.message);\n            setData({});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={8}>\n                            <Form.Item label=\"Current Password\">\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n\n                        <Col span={8}>\n                            <Form.Item label=\"New Password\">\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item label=\"Confirm New Password\">\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item>\n                                {\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\n                                        : null\n                                }\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","import { Menu } from 'antd';\nimport React from 'react';\nimport routes from './route';\nimport { Link, useLocation } from 'react-router-dom';\nimport { LogoutOutlined } from '@ant-design/icons';\n\n\nconst items = [...routes];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach((v, i) => {\n        if (v.children?.length) {\n            arr[i] = {\n                ...arr[i],\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            arr[i] = {\n                ...v,\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n        }\n    })\n}\nconvertMultiToSingle(items);\n\nitems.push(\n    {\n        label: 'Logout',\n        icon: <LogoutOutlined />,\n        key: 'logout',\n        style: { color: 'red' },\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\n        component: <></>\n    }\n);\n\nconst App = () => {\n    const paths = [];\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\n        paths.push(prev + '/' + cur);\n        return prev + '/' + cur;\n    });\n\n    return (\n        <>\n            {\n                <Menu\n                    defaultSelectedKeys={[paths.pop()]}\n                    defaultOpenKeys={[...paths]}\n                    mode=\"horizontal\"\n                    theme=\"dark\"\n                    items={items}\n                // style={{ height: '100vh' }}\n                />\n            }\n        </>\n    );\n};\n\nexport default App;","import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Card, Layout } from \"antd\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport routes from \"./route\";\nimport Error404 from \"../pages/errors/Error404\";\n\n\nconst newRoutes = [];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach(v => {\n        if (v.children) {\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\n        }\n    })\n}\nconvertMultiToSingle([...routes]);\n\n\nexport default function MyLayout() {\n    const [collapsed, setCollapsed] = useState(false);\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh' }}>\n                {/* <Layout.Sider\n                    width={250}\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        maxWidth: '300px!important',\n                        width: '300px!important'\n                    }}\n                >\n                    <div className=\"logo\" />\n                    <Menu />\n                </Layout.Sider>routes */}\n                <Layout className=\"site-layout\">\n                    {/* <Top /> */}\n                    <Menu />\n\n\n                    <Layout.Content\n                        style={{\n                            margin: '24px 40px 0 40px',\n                            // overflow: 'initial',\n                            // marginLeft: !collapsed ? '230px' : '60px'\n                        }}\n                    >\n                        {/* <Breadcrumb /> */}\n                        <Card bordered>\n                            <Routes>\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","params","query","id","ids","TinyMce","props","height","menubar","plugins","toolbar","content_style","initialValue","onChange","editorRef","useRef","onInit","evt","editor","current","init","file_browser_callback_types","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","title","name","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","handleChange","layout","gutter","span","label","required","v","TandC","FAQ","Contactus","width","padding","type","placeholder","email","e","target","number","address","PrivacyPolicy","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","className","length","MyPagination","qData","setQData","showTotal","start","page","limit","end","pageSize","pp","showSizeChanger","Address","parentId","useState","setData","loading","setLoading","selected","setSelected","fileType","addNewModalRef","addSubNewModalRef","columns","render","row","i","dataIndex","onClick","openForm","isActive","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","EditOutlined","filter","item","hidden","list","map","key","extra","catch","finally","AntdMsg","message","tableColumns","ellipsis","fixed","tableProps","bordered","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","level","marginTop","pagination","position","dataSource","scroll","y","x","ref","Search","onSubmitCapture","marginBottom","allowClear","htmlType","float","AddForm","forwardRef","open","setOpen","ajxRequesting","setAjxRequesting","useImperativeHandle","dt","console","log","save","Object","keys","slug","util","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","spinning","indicator","fontSize","spin","status","entries","forEach","ent","varDt","k","split","parseInt","UserService","avatar","phone","ModelModal","userId","LabInstrument","addNewLabelRef","AddLabel","Gases","LabWare","Chemicals","NewForm","Lifescience","Product","price","description","metaTitle","metaTag","metaDescription","inventory","actualPrice","BankOutlined","component","DashboardOutlined","Dashboard","children","ApartmentOutlined","reverse","Chemicles","LifeScience","ModelModalRef","CalendarOutlined","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","borderTop","display","flexDirection","paddingTop","paddingRight","doSave","setDoSave","PageHeader","greetingTime","Date","checkedChildren","unCheckedChildren","checked","strong","editable","editing","triggerType","margin","userName","commonObj","currentPassword","newPassword","confirmNewPassword","routes","convertMultiToSingle","arr","prevBaseUrl","to","push","LogoutOutlined","window","localStorage","clear","location","reload","paths","useLocation","pathname","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","mode","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","path","element"],"sourceRoot":""}